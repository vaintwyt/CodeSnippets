<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>swift-method-swizzling</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>    private static let _onceToken = UUID().uuidString
    
    static func awake() {
        DispatchQueue.once(token: _onceToken) {
            let selectors = [
                #selector(&lt;#funcName#&gt;),
                ]
            selectors.forEach({
                ReplaceMethod(self, $0, Selector("&lt;#pre#&gt;_" + $0.description))
            })
        }
    }
    
    func ReplaceMethod(_ _class: AnyClass, _ _originSelector: Selector, _ _newSelector: Selector) {
        let oriMethod = class_getInstanceMethod(_class, _originSelector)
        let newMethod = class_getInstanceMethod(_class, _newSelector)
        let isAddedMethod = class_addMethod(_class, _originSelector, method_getImplementation(newMethod!), method_getTypeEncoding(newMethod!))
        if isAddedMethod {
            class_replaceMethod(_class, _newSelector, method_getImplementation(oriMethod!), method_getTypeEncoding(oriMethod!))
        } else {
            method_exchangeImplementations(oriMethod!, newMethod!)
        }
    }</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>70F7D402-E336-4C17-B8EB-F2639944FC71</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Swift</string>
	<key>IDECodeSnippetSummary</key>
	<string>swift-method-swizzling</string>
	<key>IDECodeSnippetTitle</key>
	<string>swift-method-swizzling</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
